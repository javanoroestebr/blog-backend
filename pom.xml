<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<!-- Este projeto herda do spring-boot-starter-parent, que contém as configurações básicas e definições de dependências
	para qualquer projeto Spring Boot. -->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.2.0.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<!-- As propriedades definidas previamente no Spring Initializr -->
	<groupId>br.usp.lucas</groupId>
	<artifactId>blog-backend</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>blog-backend</name>
	<description>Demo project for Spring Boot</description>

	<properties>
		<!-- Usar o Java 11 para o projeto -->
		<java.version>11</java.version>
	</properties>

	<!-- As dependências que o projeto vai usar. As com nome spring-boot-starter são bibliotecas definidas pela comunidade
    Spring para tanto incluir as dependências necessárias quanto para configurá-las automaticamente. Para nós, é necessário
     apenas especificar algumas propriedades no arquivo application.properties. Note que a maioria delas não inclui a tag
      <version>; isto é porque o spring-boot-starter-parent já definiu as mais compatíveis. Para dependências não gerenciadas
      pelo Spring Boot, nós a devemos incluir. -->
	<dependencies>
		<!-- Integração com banco de dados -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<!-- Controle de migrações automáticas para o banco de dados; ideal para manter o banco sempre "em dia" com o código -->
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
		</dependency>

		<!-- Configuração web; precisaremos dela para criar nossos serviços REST -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!-- Implementação do banco de dados: usaremos o H2 como conector entre nossa aplicação e o banco -->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- Dependências para testes unitários e de integração -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!-- Integração entre o Maven e o Spring Boot -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>
